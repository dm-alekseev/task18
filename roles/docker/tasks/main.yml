---
- name: Check if the system is using APT
  command: which apt
  register: apt_check
  ignore_errors: yes

- name: Check if the system is using DNF
  command: which dnf
  register: dnf_check
  ignore_errors: yes


#--- apt -----
- name: Update apt package index for Docker installation
  apt:
    update_cache: yes
  when: apt_check.rc == 0

- name: Install required packages
  apt:
    name:
     - apt-transport-https
     - ca-certificates
     - curl
     - software-properties-common
    state: present
  when: apt_check.rc == 0


- name: Add Docker GPG key 
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
  when: apt_check.rc == 0

- name: Add Docker APT repository  
  apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
      state: present 
  when: apt_check.rc == 0

- name: Update apt package index again
  apt:
    update_cache: yes
  when: apt_check.rc == 0

- name: Install Docker CE  
  apt:
     name: docker-ce  
     state: latest 
  when: apt_check.rc == 0

- name: Ensure Docker service is running and enabled on boot
  service:
     name: docker
     state: started
     enabled: yes
  when: apt_check.rc == 0       

#--- dnf -----

- name: Update dnf package index
  dnf:
    update_cache: yes
  when: dnf_check.rc == 0

- name: Install basic utilities
  dnf:
    name:
       - vim
       - git
       - curl
       - htop
       - unzip
       - wget
    state: present
  when: dnf_check.rc == 0

- name:  Set up the Docker repository
  yum_repository:
    name: docker-ce
    description: Docker CE Stable Repository
    baseurl: https://download.docker.com/linux/centos/docker-ce.repo
    enabled: yes
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/centos/gpg
  when: dnf_check.rc == 0

- name: Install Docker
  dnf:
    name: docker-ce
    state: present
  when: dnf_check.rc == 0
  
- name: Start and enable Docker service
  systemd:
    name: docker
    state: started
    enabled: yes
  when: dnf_check.rc == 0

- name: Build the Docker image from the Dockerfile 
  command: docker build -t  alpine /opt/app/

- name: Docker run
  command:  sudo docker run -p 443:443 -d --rm -v certs:/etc/nginx/certs -v conf:/etc/nginx/conf.d -v html:/usr/share/nginx/html -v log:/var/log/nginx/  alpine 


